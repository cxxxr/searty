cl-ppcre-20220220-git/lexer.lisp:(defun map-char-to-special-char-class (chr)
cl-ppcre-20220220-git/lexer.lisp:(defun make-lexer (string)
cl-ppcre-20220220-git/lexer.lisp:(defun end-of-string-p (lexer)
cl-ppcre-20220220-git/lexer.lisp:(defun looking-at-p (lexer chr)
cl-ppcre-20220220-git/lexer.lisp:(defun next-char-non-extended (lexer)
cl-ppcre-20220220-git/lexer.lisp:(defun next-char (lexer)
cl-ppcre-20220220-git/lexer.lisp:(defun fail (lexer)
cl-ppcre-20220220-git/lexer.lisp:(defun get-number (lexer &key (radix 10) max-length no-whitespace-p)
cl-ppcre-20220220-git/lexer.lisp:(defun try-number (lexer &key (radix 10) max-length no-whitespace-p)
cl-ppcre-20220220-git/lexer.lisp:(defun make-char-from-code (number error-pos)
cl-ppcre-20220220-git/lexer.lisp:(defun unescape-char (lexer)
cl-ppcre-20220220-git/lexer.lisp:(defun read-char-property (lexer first-char)
cl-ppcre-20220220-git/lexer.lisp:(defun collect-char-class (lexer)
cl-ppcre-20220220-git/lexer.lisp:(defun maybe-parse-flags (lexer)
cl-ppcre-20220220-git/lexer.lisp:(defun get-quantifier (lexer)
cl-ppcre-20220220-git/lexer.lisp:(defun parse-register-name-aux (lexer)
cl-ppcre-20220220-git/lexer.lisp:(defun unget-token (lexer)
cl-ppcre-20220220-git/lexer.lisp:(defun get-token (lexer)
cl-ppcre-20220220-git/lexer.lisp:(defun start-of-subexpr-p (lexer)
cl-ppcre-20220220-git/parser.lisp:(defun group (lexer)
cl-ppcre-20220220-git/parser.lisp:(defun greedy-quant (lexer)
cl-ppcre-20220220-git/parser.lisp:(defun quant (lexer)
cl-ppcre-20220220-git/parser.lisp:(defun seq (lexer)
cl-ppcre-20220220-git/parser.lisp:(defun reg-expr (lexer)
cl-ppcre-20220220-git/parser.lisp:(defun parse-string (string)
cl-ppcre-20220220-git/optimize.lisp:(defun end-string (regex)
cl-ppcre-20220220-git/closures.lisp:(defun *string*= (string2 start1 end1 start2 end2)
cl-ppcre-20220220-git/closures.lisp:(defun *string*-equal (string2 start1 end1 start2 end2)
cl-ppcre-20220220-git/closures.lisp:(defun word-boundary-p (start-pos)
cl-ppcre-20220220-git/util.lisp:(defun digit-char-p (chr)
cl-ppcre-20220220-git/util.lisp:(defun word-char-p (chr)
cl-ppcre-20220220-git/util.lisp:(defun whitespacep (chr)
cl-ppcre-20220220-git/util.lisp:(defun nsubseq (sequence start &optional (end (length sequence)))
cl-ppcre-20220220-git/util.lisp:(defun normalize-var-list (var-list)
cl-ppcre-20220220-git/util.lisp:(defun string-list-to-simple-string (string-list)
cl-ppcre-20220220-git/util.lisp:(defun complement* (test-function)
cl-ppcre-20220220-git/charset.lisp:(defun make-char-vector (size)
cl-ppcre-20220220-git/charset.lisp:(defun mix (code hash)
cl-ppcre-20220220-git/charset.lisp:(defun compute-index (hash vector)
cl-ppcre-20220220-git/charset.lisp:(defun in-charset-p (char set)
cl-ppcre-20220220-git/charset.lisp:(defun add-to-charset (char set)
cl-ppcre-20220220-git/charset.lisp:(defun %add-to-charset (char set count)
cl-ppcre-20220220-git/charset.lisp:(defun %add-to-charset/expand (char set)
cl-ppcre-20220220-git/charset.lisp:(defun map-charset (function charset)
cl-ppcre-20220220-git/charset.lisp:(defun create-charset-from-test-function (test-function start end)
cl-ppcre-20220220-git/charmap.lisp:(defun in-charmap-p (char charmap)
cl-ppcre-20220220-git/charmap.lisp:(defun charmap-contents (charmap)
cl-ppcre-20220220-git/charmap.lisp:(defun make-charmap (start end test-function &optional complementp)
cl-ppcre-20220220-git/charmap.lisp:(defun create-charmap-from-test-function (test-function start end)
cl-ppcre-20220220-git/chartest.lisp:(defun create-hash-table-from-test-function (test-function start end)
cl-ppcre-20220220-git/chartest.lisp:(defun create-optimized-test-function (test-function &key
cl-ppcre-20220220-git/convert.lisp:(defun set-flag (token)
cl-ppcre-20220220-git/convert.lisp:(defun convert-char-class-to-test-function (list invertedp case-insensitive-p)
cl-ppcre-20220220-git/convert.lisp:(defun maybe-split-repetition (regex
cl-ppcre-20220220-git/convert.lisp:(defun maybe-accumulate (str)
cl-ppcre-20220220-git/convert.lisp:(defun convert-aux (parse-tree)
cl-ppcre-20220220-git/convert.lisp:(defun convert (parse-tree)
cl-ppcre-20220220-git/repetition-closures.lisp:(defun create-greedy-everything-matcher (maximum min-rest next-fn)
cl-ppcre-20220220-git/scanner.lisp:(defun create-bmh-matcher (pattern case-insensitive-p)
cl-ppcre-20220220-git/scanner.lisp:(defun create-char-searcher (chr case-insensitive-p)
cl-ppcre-20220220-git/scanner.lisp:(defun newline-skipper (start-pos)
cl-ppcre-20220220-git/scanner.lisp:(defun create-scanner-aux (match-fn
cl-ppcre-20220220-git/api.lisp:(defun scan-to-strings (regex target-string &key (start 0)
cl-ppcre-20220220-git/api.lisp:(defun count-matches (regex target-string
cl-ppcre-20220220-git/api.lisp:(defun all-matches (regex target-string
cl-ppcre-20220220-git/api.lisp:(defun all-matches-as-strings (regex target-string
cl-ppcre-20220220-git/api.lisp:(defun split (regex target-string
cl-ppcre-20220220-git/api.lisp:(defun string-case-modifier (str from to start end)
cl-ppcre-20220220-git/api.lisp:  (defun build-replacement-template (replacement)
cl-ppcre-20220220-git/api.lisp:(defun build-replacement (replacement-template
cl-ppcre-20220220-git/api.lisp:(defun replace-aux (target-string replacement pos-list reg-list start end
cl-ppcre-20220220-git/api.lisp:(defun regex-replace (regex target-string replacement &key
cl-ppcre-20220220-git/api.lisp:(defun regex-replace-all (regex target-string replacement &key
cl-ppcre-20220220-git/api.lisp:(defun regex-apropos-list (regex &optional packages &key (case-insensitive t))
cl-ppcre-20220220-git/api.lisp:(defun print-symbol-info (symbol)
cl-ppcre-20220220-git/api.lisp:(defun regex-apropos (regex &optional packages &key (case-insensitive t))
cl-ppcre-20220220-git/api.lisp:  (defun quote-meta-chars (string &key (start 0) (end (length string)))
cl-ppcre-20220220-git/api.lisp:  (defun quote-sections (string)
cl-ppcre-20220220-git/api.lisp:  (defun clean-comments (string &optional extended-mode)
cl-ppcre-20220220-git/api.lisp:(defun parse-tree-synonym (symbol)
cl-ppcre-20220220-git/api.lisp:(defun (setf parse-tree-synonym) (new-parse-tree symbol)
cl-ppcre-20220220-git/specials.lisp:  (defun hyperdoc-lookup (symbol type)
